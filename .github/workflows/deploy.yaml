name: Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types:
      - released

jobs:
  docker:
    name: Docker Images
    runs-on: ubuntu-22.04
    environment: build
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor:
            # don't automatically tag with `latest`; we do this conditionally in the `tags` section
            latest=false
          images: |
            ${{ vars.DOCKERHUB_REPO }}
            ${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY}}/autograph
          # The first tag is kept for AWS compatibility. It should be removed when Autograph
          # is no longer deployed in AWS.
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable=${{ github.event_name == 'push' }}
            type=sha,format=long,enable=${{ github.event_name == 'push' }}

      - name: Generate version.json
        shell: bash
        run: make generate

      - id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          # service_account: artifact-writer@${{ vars.GCP_PROJECT_ID}}.iam.gserviceaccount.com
          # workload_identity_provider: ${{ vars.GCPV2_GITHUB_WORKLOAD_IDENTITY_PROVIDER }}
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        if: ${{ github.event_name == 'push' }}
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name == 'push' }}
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .

      # Not ideal, but the docker/build-push-action doesn't allow us to re-use
      # existing images.
      - name: Tag and push
        if: ${{ github.event_name == 'release' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          SRC: ${{ vars.DOCKERHUB_REPO}}:sha-${{ github.sha }}
        run: |
          docker pull $SRC
          for tag in $TAGS; do
            docker tag $SRC $tag
            docker push $tag
          done
